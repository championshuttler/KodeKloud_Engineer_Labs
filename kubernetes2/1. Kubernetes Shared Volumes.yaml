# For the first container, use image ubuntu with latest tag only and remember to mention the tag i.e ubuntu:latest, container should be named as volume-container-datacenter-1, and run a sleep command for it so that it remains in running state. Volume volume-share should be mounted at path /tmp/blog.


# For the second container, use image ubuntu with the latest tag only and remember to mention the tag i.e ubuntu:latest, container should be named as volume-container-datacenter-2, and again run a sleep command for it so that it remains in running state. Volume volume-share should be mounted at path /tmp/cluster.


# Volume name should be volume-share of type emptyDir.


# After creating the pod, exec into the first container i.e volume-container-datacenter-1, and just for testing create a file blog.txt with any content under the mounted path of first container i.e /tmp/blog.


# The file blog.txt should be present under the mounted path /tmp/cluster on the second container volume-container-datacenter-2 as well, since they are using a shared volume.


# Note: The kubectl utility on jump_host has been configured to work with the kubernetes cluster.


apiVersion: v1
kind: Pod
metadata:
  name: volume-share-datacenter
  labels:
    name: volume-share-datacenter
spec:
  containers:
  - name: volume-container-datacenter-1
    image: ubuntu:latest
    command: ["/bin/sh", "-ec", "sleep 1000"]
    volumeMounts:
      - name: volume-share
        mountPath: /tmp/blog
  - name: volume-container-datacenter-2
    image: ubuntu:latest
    command: ["/bin/sh", "-ec", "sleep 1000"]
    volumeMounts:
      - name: volume-share
        mountPath: /tmp/cluster
  volumes:
  - name: volume-share
    emptyDir:
      sizeLimit: 500Mi

